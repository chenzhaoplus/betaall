server:
  port: 8089
#  max-http-header-size: 1024000
  servlet:
    jsp:
      init-parameters:
        development: true
    context-path: /elasticjob
#  context-path: /elasticjob

spring:
  profiles:
    active: dev
#    active: test
#    active: pro

  swagger:
    basePackage: com.sinosoft.elasticjob

#mybatis-plus:
#  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.mapper
#  # 如果是放在resource目录 classpath:/mapper/*Mapper.mapper
#  mapper-locations: classpath:mybatis/mappers/*Mapper.mapper
#  #实体扫描，多个package用逗号或者分号分隔
#  typeAliasesPackage: cn.sinosoft.entity
#  global-config:
#    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
#    id-type: 0
#    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
#    field-strategy: 1
#    #驼峰下划线转换
#    #db-column-underline: true
#    #刷新mapper 调试神器
#    #refresh-mapper: true
#    #数据库大写下划线转换
#    #capital-mode: true
#    # Sequence序列接口实现类配置
#    #key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
#    #逻辑删除配置（下面3个配置）
#    #logic-delete-value: 1
#    #logic-not-delete-value: 0
#    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
#    #自定义填充策略接口实现
#    #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
#  configuration:
#    map-underscore-to-camel-case: true
#    cache-enabled: false
#    #配置JdbcTypeForNull
#    jdbc-type-for-null: 'null'

#mybatis:
#  mapper-locations: classpath*:mapper/**/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
#  type-aliases-package: com.sinosoft.**.entity  # 注意：对应实体类的路径

mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  #可以通过mybatis.config-location属性来指定mybatis的配置文件的位置，
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.sinosoft.**.entity   #自己的实体类地址
  global-config:
    db-config:
      id-type: uuid
      field-strategy: not_empty
      table-underline: true
      logic-delete-value: 1
      logic-not-delete-value: 0
    refresh: true
  configuration:
    #开启驼峰命名法
    map-underscore-to-camel-case: true
    cache-enabled: false
    jdbc-type-for-null: 'null'
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#pagehelper分页插件
pagehelper:
    helperDialect: oracle
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql